version: '3.8'

services:
  #db-section
  sqlserverdb:
    image:  mcr.microsoft.com/mssql/server:2019-latest
    container_name: sqlserverdb
    environment:
       SA_PASSWORD: "PassW0rd!"
       ACCEPT_EULA: "Y"
    restart: always
    volumes:
     - ./data:/var/opt/mssql/data
     - ./log:/var/opt/mssql/log
     - ./secrets:/var/opt/mssql/secrets
    ports:
     - "1435:1433"

 #api-section
  authenticate:
    image: ${DOCKER_REGISTRY-}authenticated
    build:
      context: .
      dockerfile: Authenticate_Service/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - "ConnectionStrings:DefaultConnection=server=sqlserverdb;database=Authentication;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True"
      - "EventBusSetting:HostAddress=amqp://guest:guest@rabbitmq:5672"
    ports:
      - "6001:80"
    depends_on:
      - sqlserverdb
      - rabbitmq
     
    restart: always
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

 

  rabbitmq:
     image: rabbitmq:3.12.11-management-alpine
     container_name: rabbitmq
     restart: always
     ports:
      - "5672:5672"
      - "15672:15672"
  
 # redisdb:
  #   image: "redis:alpine"
  ##   container_name: redisdb
     #restart: always
     #ports:
     #  - "6379:6379"

       
  
  course:
    image: ${DOCKER_REGISTRY-}course
    build:
      context: .
      dockerfile: Course.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:DefaultConnection=server=sqlserverdb;database=Course;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
      - "EventBusSetting:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "GrpcSetting:UserUrl=http://usergrpc"
    ports:
      - "6002:80"
    depends_on:
      - sqlserverdb
      - rabbitmq
    restart: always
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro


  reverseproxy:
    image: ${DOCKER_REGISTRY-}reverseproxy
    build:
      context: .
      dockerfile: ReverseProxy/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_URLS=http://+:80
      - GlobalConfiguration:BaseURL=http://reverseproxy
    depends_on:
      - course
      - authenticate
    ports:
      - "6000:80"
    restart: always
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

#gRPC
 
  usergrpc:
    image: ${DOCKER_REGISTRY-}usergrpc
    build:
      context: .
      dockerfile: GrpcService1/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      -  ConnectionStrings:DefaultConnection=server=sqlserverdb;database=Authentication;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
    ports:
      - "6003:80"
    depends_on:
      - sqlserverdb
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
  

  moderationservice.api:
    image: ${DOCKER_REGISTRY-}moderationserviceapi
    build:
      context: .
      dockerfile: ModerationService.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:DefaultConnection=server=sqlserverdb;database=Content_Moderation;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
      - "EventBusSetting:HostAddress=amqp://guest:guest@rabbitmq:5672"
      - "GrpcSetting:UserUrl=http://usergrpc"
      - "GrpcSetting2:CourseUrl=http://coursegrpc"
    ports:
      - "6004:80"
    depends_on:
      - sqlserverdb
      - rabbitmq
    restart: always
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro


  coursegrpc:
    image: ${DOCKER_REGISTRY-}coursegrpc
    build:
      context: .
      dockerfile: CourseGRPC/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      -  ConnectionStrings:DefaultConnection=server=sqlserverdb;database=Course;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
    ports:
      - "6005:80"
    depends_on:
      - sqlserverdb
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro

  notificationservice.api:
    image: ${DOCKER_REGISTRY-}notificationserviceapi
    build:
      context: .
      dockerfile: NotificationService.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings:DefaultConnection=server=sqlserverdb;database=Notification;uid=sa;pwd=PassW0rd!;TrustServerCertificate=True
      - "EventBusSetting:HostAddress=amqp://guest:guest@rabbitmq:5672"
    ports:
      - "6006:80"
    restart: always
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro

networks:
   default: 
     name: CMS
     driver: bridge
     

     












